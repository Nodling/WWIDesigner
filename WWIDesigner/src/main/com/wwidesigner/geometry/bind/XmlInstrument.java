//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.06.02 at 10:20:05 AM MDT 
//

package com.wwidesigner.geometry.bind;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * The physical geometry of a wood wind. Dimensions may represent initial values
 * subject to optimization or final values fixed throughout the calculations.
 * 
 * 
 * <p>
 * Java class for XmlInstrument complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * 
 * <pre>
 * &lt;complexType name="XmlInstrument">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="name" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="description" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="lengthType" type="{http://www.wwidesigner.com/Instrument}XmlLengthType"/>
 *         &lt;element name="borePoint" type="{http://www.wwidesigner.com/Instrument}XmlBorePoint" maxOccurs="unbounded"/>
 *         &lt;element name="mouthpiece" type="{http://www.wwidesigner.com/Instrument}XmlMouthpiece" minOccurs="0"/>
 *         &lt;element name="hole" type="{http://www.wwidesigner.com/Instrument}XmlHole" maxOccurs="unbounded"/>
 *         &lt;element name="termination" type="{http://www.wwidesigner.com/Instrument}XmlEndBoreSection"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "XmlInstrument", propOrder = { "name", "description",
		"lengthType", "borePoint", "mouthpiece", "hole", "termination" })
public class XmlInstrument
{

	@XmlElement(required = true)
	protected String name;
	protected String description;
	@XmlElement(required = true)
	protected XmlLengthType lengthType;
	@XmlElement(required = true)
	protected List<XmlBorePoint> borePoint;
	protected XmlMouthpiece mouthpiece;
	@XmlElement(required = true)
	protected List<XmlHole> hole;
	@XmlElement(required = true)
	protected XmlEndBoreSection termination;

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.wwidesigner.geometry.bind.InstrumentInterface#getName()
	 */
	public String getName()
	{
		return name;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.wwidesigner.geometry.bind.InstrumentInterface#setName(java.lang.String
	 * )
	 */
	public void setName(String value)
	{
		this.name = value;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.wwidesigner.geometry.bind.InstrumentInterface#getDescription()
	 */
	public String getDescription()
	{
		return description;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.wwidesigner.geometry.bind.InstrumentInterface#setDescription(java
	 * .lang.String)
	 */
	public void setDescription(String value)
	{
		this.description = value;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.wwidesigner.geometry.bind.InstrumentInterface#getLengthType()
	 */
	public XmlLengthType getLengthType()
	{
		return lengthType;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.wwidesigner.geometry.bind.InstrumentInterface#setLengthType(com.
	 * wwidesigner.geometry.bind.XmlLengthType)
	 */
	public void setLengthType(XmlLengthType value)
	{
		this.lengthType = value;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.wwidesigner.geometry.bind.InstrumentInterface#getBorePoint()
	 */
	public List<XmlBorePoint> getBorePoint()
	{
		if (borePoint == null)
		{
			borePoint = new ArrayList<XmlBorePoint>();
		}
		return this.borePoint;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.wwidesigner.geometry.bind.InstrumentInterface#getMouthpiece()
	 */
	public XmlMouthpiece getMouthpiece()
	{
		return mouthpiece;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.wwidesigner.geometry.bind.InstrumentInterface#setMouthpiece(com.
	 * wwidesigner.geometry.bind.XmlMouthpiece)
	 */
	public void setMouthpiece(XmlMouthpiece value)
	{
		this.mouthpiece = value;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.wwidesigner.geometry.bind.InstrumentInterface#getHole()
	 */
	public List<XmlHole> getHole()
	{
		if (hole == null)
		{
			hole = new ArrayList<XmlHole>();
		}
		return this.hole;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.wwidesigner.geometry.bind.InstrumentInterface#getTermination()
	 */
	public XmlEndBoreSection getTermination()
	{
		return termination;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.wwidesigner.geometry.bind.InstrumentInterface#setTermination(com.
	 * wwidesigner.geometry.bind.XmlEndBoreSection)
	 */
	public void setTermination(XmlEndBoreSection value)
	{
		this.termination = value;
	}

}

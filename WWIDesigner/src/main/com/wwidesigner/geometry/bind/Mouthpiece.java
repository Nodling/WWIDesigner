//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.07.04 at 12:07:42 PM MDT 
//


package com.wwidesigner.geometry.bind;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;


/**
 * First pass at a sound-mechanism model. Represents
 * 				a choice between (1) a flute-type embouchure and (2) a fipple
 * 				mechanism. We need to add reeds, end-blown flutes, etc. The position
 * 				of the mouthpiece is taken from the mouthpieceOrigin borePoint.
 * 			
 * 
 * <p>Java class for Mouthpiece complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Mouthpiece">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="position" type="{http://www.wwidesigner.com/Instrument}Dimension"/>
 *         &lt;choice>
 *           &lt;element name="embouchureHole">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;sequence>
 *                     &lt;element name="length" type="{http://www.wwidesigner.com/Instrument}MoreThanZero"/>
 *                     &lt;element name="width" type="{http://www.wwidesigner.com/Instrument}MoreThanZero"/>
 *                     &lt;element name="height" type="{http://www.wwidesigner.com/Instrument}MoreThanZero"/>
 *                     &lt;element name="airstreamLength" type="{http://www.wwidesigner.com/Instrument}MoreThanZero"/>
 *                     &lt;element name="airstreamHeight" type="{http://www.wwidesigner.com/Instrument}MoreThanZero"/>
 *                   &lt;/sequence>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="fipple">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;sequence>
 *                     &lt;element name="windowLength" type="{http://www.wwidesigner.com/Instrument}MoreThanZero"/>
 *                     &lt;element name="windowWidth" type="{http://www.wwidesigner.com/Instrument}MoreThanZero"/>
 *                     &lt;element name="fippleFactor" type="{http://www.wwidesigner.com/Instrument}MoreThanZero" minOccurs="0"/>
 *                     &lt;element name="windowHeight" type="{http://www.wwidesigner.com/Instrument}MoreThanZero" minOccurs="0"/>
 *                     &lt;element name="windwayLength" type="{http://www.wwidesigner.com/Instrument}MoreThanZero" minOccurs="0"/>
 *                     &lt;element name="windwayHeight" type="{http://www.wwidesigner.com/Instrument}MoreThanZero" minOccurs="0"/>
 *                   &lt;/sequence>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *         &lt;/choice>
 *         &lt;element name="beta" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}double">
 *               &lt;minExclusive value="0"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Mouthpiece", propOrder = {
    "position",
    "embouchureHole",
    "fipple",
    "beta"
})
public class Mouthpiece {

    protected double position;
    protected Mouthpiece.EmbouchureHole embouchureHole;
    protected Mouthpiece.Fipple fipple;
    protected Double beta;

    /**
     * Gets the value of the position property.
     * 
     */
    public double getPosition() {
        return position;
    }

    /**
     * Sets the value of the position property.
     * 
     */
    public void setPosition(double value) {
        this.position = value;
    }

    /**
     * Gets the value of the embouchureHole property.
     * 
     * @return
     *     possible object is
     *     {@link Mouthpiece.EmbouchureHole }
     *     
     */
    public Mouthpiece.EmbouchureHole getEmbouchureHole() {
        return embouchureHole;
    }

    /**
     * Sets the value of the embouchureHole property.
     * 
     * @param value
     *     allowed object is
     *     {@link Mouthpiece.EmbouchureHole }
     *     
     */
    public void setEmbouchureHole(Mouthpiece.EmbouchureHole value) {
        this.embouchureHole = value;
    }

    /**
     * Gets the value of the fipple property.
     * 
     * @return
     *     possible object is
     *     {@link Mouthpiece.Fipple }
     *     
     */
    public Mouthpiece.Fipple getFipple() {
        return fipple;
    }

    /**
     * Sets the value of the fipple property.
     * 
     * @param value
     *     allowed object is
     *     {@link Mouthpiece.Fipple }
     *     
     */
    public void setFipple(Mouthpiece.Fipple value) {
        this.fipple = value;
    }

    /**
     * Gets the value of the beta property.
     * 
     * @return
     *     possible object is
     *     {@link Double }
     *     
     */
    public Double getBeta() {
        return beta;
    }

    /**
     * Sets the value of the beta property.
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public void setBeta(Double value) {
        this.beta = value;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="length" type="{http://www.wwidesigner.com/Instrument}MoreThanZero"/>
     *         &lt;element name="width" type="{http://www.wwidesigner.com/Instrument}MoreThanZero"/>
     *         &lt;element name="height" type="{http://www.wwidesigner.com/Instrument}MoreThanZero"/>
     *         &lt;element name="airstreamLength" type="{http://www.wwidesigner.com/Instrument}MoreThanZero"/>
     *         &lt;element name="airstreamHeight" type="{http://www.wwidesigner.com/Instrument}MoreThanZero"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "length",
        "width",
        "height",
        "airstreamLength",
        "airstreamHeight"
    })
    public static class EmbouchureHole {

        protected double length;
        protected double width;
        protected double height;
        protected double airstreamLength;
        protected double airstreamHeight;

        /**
         * Gets the value of the length property.
         * 
         */
        public double getLength() {
            return length;
        }

        /**
         * Sets the value of the length property.
         * 
         */
        public void setLength(double value) {
            this.length = value;
        }

        /**
         * Gets the value of the width property.
         * 
         */
        public double getWidth() {
            return width;
        }

        /**
         * Sets the value of the width property.
         * 
         */
        public void setWidth(double value) {
            this.width = value;
        }

        /**
         * Gets the value of the height property.
         * 
         */
        public double getHeight() {
            return height;
        }

        /**
         * Sets the value of the height property.
         * 
         */
        public void setHeight(double value) {
            this.height = value;
        }

        /**
         * Gets the value of the airstreamLength property.
         * 
         */
        public double getAirstreamLength() {
            return airstreamLength;
        }

        /**
         * Sets the value of the airstreamLength property.
         * 
         */
        public void setAirstreamLength(double value) {
            this.airstreamLength = value;
        }

        /**
         * Gets the value of the airstreamHeight property.
         * 
         */
        public double getAirstreamHeight() {
            return airstreamHeight;
        }

        /**
         * Sets the value of the airstreamHeight property.
         * 
         */
        public void setAirstreamHeight(double value) {
            this.airstreamHeight = value;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="windowLength" type="{http://www.wwidesigner.com/Instrument}MoreThanZero"/>
     *         &lt;element name="windowWidth" type="{http://www.wwidesigner.com/Instrument}MoreThanZero"/>
     *         &lt;element name="fippleFactor" type="{http://www.wwidesigner.com/Instrument}MoreThanZero" minOccurs="0"/>
     *         &lt;element name="windowHeight" type="{http://www.wwidesigner.com/Instrument}MoreThanZero" minOccurs="0"/>
     *         &lt;element name="windwayLength" type="{http://www.wwidesigner.com/Instrument}MoreThanZero" minOccurs="0"/>
     *         &lt;element name="windwayHeight" type="{http://www.wwidesigner.com/Instrument}MoreThanZero" minOccurs="0"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "windowLength",
        "windowWidth",
        "fippleFactor",
        "windowHeight",
        "windwayLength",
        "windwayHeight"
    })
    public static class Fipple {

        protected double windowLength;
        protected double windowWidth;
        protected Double fippleFactor;
        protected Double windowHeight;
        protected Double windwayLength;
        protected Double windwayHeight;

        /**
         * Gets the value of the windowLength property.
         * 
         */
        public double getWindowLength() {
            return windowLength;
        }

        /**
         * Sets the value of the windowLength property.
         * 
         */
        public void setWindowLength(double value) {
            this.windowLength = value;
        }

        /**
         * Gets the value of the windowWidth property.
         * 
         */
        public double getWindowWidth() {
            return windowWidth;
        }

        /**
         * Sets the value of the windowWidth property.
         * 
         */
        public void setWindowWidth(double value) {
            this.windowWidth = value;
        }

        /**
         * Gets the value of the fippleFactor property.
         * 
         * @return
         *     possible object is
         *     {@link Double }
         *     
         */
        public Double getFippleFactor() {
            return fippleFactor;
        }

        /**
         * Sets the value of the fippleFactor property.
         * 
         * @param value
         *     allowed object is
         *     {@link Double }
         *     
         */
        public void setFippleFactor(Double value) {
            this.fippleFactor = value;
        }

        /**
         * Gets the value of the windowHeight property.
         * 
         * @return
         *     possible object is
         *     {@link Double }
         *     
         */
        public Double getWindowHeight() {
            return windowHeight;
        }

        /**
         * Sets the value of the windowHeight property.
         * 
         * @param value
         *     allowed object is
         *     {@link Double }
         *     
         */
        public void setWindowHeight(Double value) {
            this.windowHeight = value;
        }

        /**
         * Gets the value of the windwayLength property.
         * 
         * @return
         *     possible object is
         *     {@link Double }
         *     
         */
        public Double getWindwayLength() {
            return windwayLength;
        }

        /**
         * Sets the value of the windwayLength property.
         * 
         * @param value
         *     allowed object is
         *     {@link Double }
         *     
         */
        public void setWindwayLength(Double value) {
            this.windwayLength = value;
        }

        /**
         * Gets the value of the windwayHeight property.
         * 
         * @return
         *     possible object is
         *     {@link Double }
         *     
         */
        public Double getWindwayHeight() {
            return windwayHeight;
        }

        /**
         * Sets the value of the windwayHeight property.
         * 
         * @param value
         *     allowed object is
         *     {@link Double }
         *     
         */
        public void setWindwayHeight(Double value) {
            this.windwayHeight = value;
        }

    }

}

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.06.30 at 09:14:21 PM MDT 
//


package com.wwidesigner.geometry.bind;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * First pass at a sound-mechanism model. Represents
 * 				a choice between (1) a characteristic length, (2) a flute-type
 * 				embouchure, and (3) a fipple mechanism. We need to add reeds,
 * 				end-blown flutes, etc. The position of the mouthpiece is taken from
 * 				the mouthpieceOrigin borePoint.
 * 			
 * 
 * <p>Java class for Mouthpiece complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Mouthpiece">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;choice>
 *           &lt;element name="characteristicLength" type="{http://www.wwidesigner.com/Instrument}MoreThanZero"/>
 *           &lt;element name="embouchureHole">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;sequence>
 *                     &lt;element name="innerDiameter" type="{http://www.wwidesigner.com/Instrument}MoreThanZero"/>
 *                     &lt;element name="outerDiameter" type="{http://www.wwidesigner.com/Instrument}MoreThanZero"/>
 *                     &lt;element name="height" type="{http://www.wwidesigner.com/Instrument}MoreThanZero"/>
 *                     &lt;element name="headPoint" type="{http://www.wwidesigner.com/Instrument}BorePoint" maxOccurs="unbounded"/>
 *                   &lt;/sequence>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="fipple">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;sequence>
 *                     &lt;element name="windowLength" type="{http://www.wwidesigner.com/Instrument}MoreThanZero"/>
 *                     &lt;element name="windowWidth" type="{http://www.wwidesigner.com/Instrument}MoreThanZero"/>
 *                     &lt;element name="fippleFactor" type="{http://www.wwidesigner.com/Instrument}MoreThanZero"/>
 *                     &lt;element name="windowHeight" type="{http://www.wwidesigner.com/Instrument}MoreThanZero" minOccurs="0"/>
 *                     &lt;element name="windwayLength" type="{http://www.wwidesigner.com/Instrument}MoreThanZero" minOccurs="0"/>
 *                     &lt;element name="windwayHeight" type="{http://www.wwidesigner.com/Instrument}MoreThanZero" minOccurs="0"/>
 *                   &lt;/sequence>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *         &lt;/choice>
 *         &lt;element name="beta" type="{http://www.wwidesigner.com/Instrument}ZeroOrMore" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Mouthpiece", propOrder = {
    "characteristicLength",
    "embouchureHole",
    "fipple",
    "beta"
})
public class Mouthpiece {

    protected MoreThanZero characteristicLength;
    protected Mouthpiece.EmbouchureHole embouchureHole;
    protected Mouthpiece.Fipple fipple;
    protected ZeroOrMore beta;

    /**
     * Gets the value of the characteristicLength property.
     * 
     * @return
     *     possible object is
     *     {@link MoreThanZero }
     *     
     */
    public MoreThanZero getCharacteristicLength() {
        return characteristicLength;
    }

    /**
     * Sets the value of the characteristicLength property.
     * 
     * @param value
     *     allowed object is
     *     {@link MoreThanZero }
     *     
     */
    public void setCharacteristicLength(MoreThanZero value) {
        this.characteristicLength = value;
    }

    /**
     * Gets the value of the embouchureHole property.
     * 
     * @return
     *     possible object is
     *     {@link Mouthpiece.EmbouchureHole }
     *     
     */
    public Mouthpiece.EmbouchureHole getEmbouchureHole() {
        return embouchureHole;
    }

    /**
     * Sets the value of the embouchureHole property.
     * 
     * @param value
     *     allowed object is
     *     {@link Mouthpiece.EmbouchureHole }
     *     
     */
    public void setEmbouchureHole(Mouthpiece.EmbouchureHole value) {
        this.embouchureHole = value;
    }

    /**
     * Gets the value of the fipple property.
     * 
     * @return
     *     possible object is
     *     {@link Mouthpiece.Fipple }
     *     
     */
    public Mouthpiece.Fipple getFipple() {
        return fipple;
    }

    /**
     * Sets the value of the fipple property.
     * 
     * @param value
     *     allowed object is
     *     {@link Mouthpiece.Fipple }
     *     
     */
    public void setFipple(Mouthpiece.Fipple value) {
        this.fipple = value;
    }

    /**
     * Gets the value of the beta property.
     * 
     * @return
     *     possible object is
     *     {@link ZeroOrMore }
     *     
     */
    public ZeroOrMore getBeta() {
        return beta;
    }

    /**
     * Sets the value of the beta property.
     * 
     * @param value
     *     allowed object is
     *     {@link ZeroOrMore }
     *     
     */
    public void setBeta(ZeroOrMore value) {
        this.beta = value;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="innerDiameter" type="{http://www.wwidesigner.com/Instrument}MoreThanZero"/>
     *         &lt;element name="outerDiameter" type="{http://www.wwidesigner.com/Instrument}MoreThanZero"/>
     *         &lt;element name="height" type="{http://www.wwidesigner.com/Instrument}MoreThanZero"/>
     *         &lt;element name="headPoint" type="{http://www.wwidesigner.com/Instrument}BorePoint" maxOccurs="unbounded"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "innerDiameter",
        "outerDiameter",
        "height",
        "headPoint"
    })
    public static class EmbouchureHole {

        @XmlElement(required = true)
        protected MoreThanZero innerDiameter;
        @XmlElement(required = true)
        protected MoreThanZero outerDiameter;
        @XmlElement(required = true)
        protected MoreThanZero height;
        @XmlElement(required = true)
        protected List<BorePoint> headPoint;

        /**
         * Gets the value of the innerDiameter property.
         * 
         * @return
         *     possible object is
         *     {@link MoreThanZero }
         *     
         */
        public MoreThanZero getInnerDiameter() {
            return innerDiameter;
        }

        /**
         * Sets the value of the innerDiameter property.
         * 
         * @param value
         *     allowed object is
         *     {@link MoreThanZero }
         *     
         */
        public void setInnerDiameter(MoreThanZero value) {
            this.innerDiameter = value;
        }

        /**
         * Gets the value of the outerDiameter property.
         * 
         * @return
         *     possible object is
         *     {@link MoreThanZero }
         *     
         */
        public MoreThanZero getOuterDiameter() {
            return outerDiameter;
        }

        /**
         * Sets the value of the outerDiameter property.
         * 
         * @param value
         *     allowed object is
         *     {@link MoreThanZero }
         *     
         */
        public void setOuterDiameter(MoreThanZero value) {
            this.outerDiameter = value;
        }

        /**
         * Gets the value of the height property.
         * 
         * @return
         *     possible object is
         *     {@link MoreThanZero }
         *     
         */
        public MoreThanZero getHeight() {
            return height;
        }

        /**
         * Sets the value of the height property.
         * 
         * @param value
         *     allowed object is
         *     {@link MoreThanZero }
         *     
         */
        public void setHeight(MoreThanZero value) {
            this.height = value;
        }

        /**
         * Gets the value of the headPoint property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the headPoint property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getHeadPoint().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link BorePoint }
         * 
         * 
         */
        public List<BorePoint> getHeadPoint() {
            if (headPoint == null) {
                headPoint = new ArrayList<BorePoint>();
            }
            return this.headPoint;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="windowLength" type="{http://www.wwidesigner.com/Instrument}MoreThanZero"/>
     *         &lt;element name="windowWidth" type="{http://www.wwidesigner.com/Instrument}MoreThanZero"/>
     *         &lt;element name="fippleFactor" type="{http://www.wwidesigner.com/Instrument}MoreThanZero"/>
     *         &lt;element name="windowHeight" type="{http://www.wwidesigner.com/Instrument}MoreThanZero" minOccurs="0"/>
     *         &lt;element name="windwayLength" type="{http://www.wwidesigner.com/Instrument}MoreThanZero" minOccurs="0"/>
     *         &lt;element name="windwayHeight" type="{http://www.wwidesigner.com/Instrument}MoreThanZero" minOccurs="0"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "windowLength",
        "windowWidth",
        "fippleFactor",
        "windowHeight",
        "windwayLength",
        "windwayHeight"
    })
    public static class Fipple {

        @XmlElement(required = true)
        protected MoreThanZero windowLength;
        @XmlElement(required = true)
        protected MoreThanZero windowWidth;
        @XmlElement(required = true)
        protected MoreThanZero fippleFactor;
        protected MoreThanZero windowHeight;
        protected MoreThanZero windwayLength;
        protected MoreThanZero windwayHeight;

        /**
         * Gets the value of the windowLength property.
         * 
         * @return
         *     possible object is
         *     {@link MoreThanZero }
         *     
         */
        public MoreThanZero getWindowLength() {
            return windowLength;
        }

        /**
         * Sets the value of the windowLength property.
         * 
         * @param value
         *     allowed object is
         *     {@link MoreThanZero }
         *     
         */
        public void setWindowLength(MoreThanZero value) {
            this.windowLength = value;
        }

        /**
         * Gets the value of the windowWidth property.
         * 
         * @return
         *     possible object is
         *     {@link MoreThanZero }
         *     
         */
        public MoreThanZero getWindowWidth() {
            return windowWidth;
        }

        /**
         * Sets the value of the windowWidth property.
         * 
         * @param value
         *     allowed object is
         *     {@link MoreThanZero }
         *     
         */
        public void setWindowWidth(MoreThanZero value) {
            this.windowWidth = value;
        }

        /**
         * Gets the value of the fippleFactor property.
         * 
         * @return
         *     possible object is
         *     {@link MoreThanZero }
         *     
         */
        public MoreThanZero getFippleFactor() {
            return fippleFactor;
        }

        /**
         * Sets the value of the fippleFactor property.
         * 
         * @param value
         *     allowed object is
         *     {@link MoreThanZero }
         *     
         */
        public void setFippleFactor(MoreThanZero value) {
            this.fippleFactor = value;
        }

        /**
         * Gets the value of the windowHeight property.
         * 
         * @return
         *     possible object is
         *     {@link MoreThanZero }
         *     
         */
        public MoreThanZero getWindowHeight() {
            return windowHeight;
        }

        /**
         * Sets the value of the windowHeight property.
         * 
         * @param value
         *     allowed object is
         *     {@link MoreThanZero }
         *     
         */
        public void setWindowHeight(MoreThanZero value) {
            this.windowHeight = value;
        }

        /**
         * Gets the value of the windwayLength property.
         * 
         * @return
         *     possible object is
         *     {@link MoreThanZero }
         *     
         */
        public MoreThanZero getWindwayLength() {
            return windwayLength;
        }

        /**
         * Sets the value of the windwayLength property.
         * 
         * @param value
         *     allowed object is
         *     {@link MoreThanZero }
         *     
         */
        public void setWindwayLength(MoreThanZero value) {
            this.windwayLength = value;
        }

        /**
         * Gets the value of the windwayHeight property.
         * 
         * @return
         *     possible object is
         *     {@link MoreThanZero }
         *     
         */
        public MoreThanZero getWindwayHeight() {
            return windwayHeight;
        }

        /**
         * Sets the value of the windwayHeight property.
         * 
         * @param value
         *     allowed object is
         *     {@link MoreThanZero }
         *     
         */
        public void setWindwayHeight(MoreThanZero value) {
            this.windwayHeight = value;
        }

    }

}
